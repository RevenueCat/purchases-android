plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
}

apply from: "$rootProject.projectDir/base-application.gradle"

android {
    compileSdkVersion compileVersion
    defaultConfig {
        applicationId "com.revenuecat.purchases.integrationtests"
        minSdkVersion 16
        targetSdkVersion compileVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file('keystore')
            storePassword project.properties['releaseKeystorePassword']
            keyAlias project.properties['releaseKeyAlias']
            keyPassword project.properties['releaseKeyPassword']
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    testBuildType obtainTestBuildType()
    namespace 'com.revenuecat.purchases.integrationtests'
}

dependencies {
    implementation project(path: ':purchases')

    implementation libs.kotlin.stdlib
    implementation libs.androidx.core
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.multidex

    androidTestImplementation project(path: ':purchases')
    androidTestImplementation libs.androidx.test.espresso.core
    androidTestImplementation libs.androidx.test.runner
    androidTestImplementation libs.androidx.test.rules
    androidTestImplementation libs.androidx.test.junit
}

def obtainTestBuildType() {
    def result = "debug";

    if (project.hasProperty("testBuildType")) {
        result = project.getProperties().get("testBuildType")
    }

    result
}

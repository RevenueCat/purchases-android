version: 2.1
orbs:
  android: circleci/android@0.2.1
executors:
  android-executor:
    docker:
      - image: circleci/android:api-28-alpha
    working_directory: ~/purchases-android
    environment:
      JVM_OPTS: -Xmx3200m
      CIRCLE_JDK_VERSION: oraclejdk8

jobs:
  build:
    executor: android-executor
    steps:
      - checkout
      - android/accept-licenses
  test:
    executor: android-executor
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "purchases/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "purchases/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - run:
          name: Test coverage report
          command: ./gradlew testDebugUnitTestCoverage coveralls
      - android/save-build-cache
      - store_artifacts:
          path: purchases/build/reports
      - store_test_results:
          path: purchases/build/test-results

  docs-deploy:
    executor: android-executor
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "purchases/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Install awscli
          command: sudo pip install awscli
      - run:
          name: Dokka
          command: ./gradlew dokka
      - run:
          name: Deploy to S3
          command: aws s3 sync ~/purchases-android/docs s3://purchases-docs/android --delete --acl public-read
      - run:
          name: Invalidate CloudFront caches
          command: aws cloudfront create-invalidation --distribution-id EPTW7F3CB566V --paths "/*"

  deploy:
    executor: android-executor
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "purchases/build.gradle" }}
      - run:
          name: Deployment
          command: |
            .buildscripts/deploy_snapshot.sh

  assemble:
    executor: android-executor
    steps:
      - checkout
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "purchases/build.gradle" }}
      - android/restore-build-cache
      - run:
          name: Assemble
          command: ./gradlew assemble
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "purchases/build.gradle" }}
      - android/save-build-cache

workflows:
  version: 2
  test-assemble-deploy-docs:
    jobs:
      - build
      - test:
          requires:
            - build
      - assemble:
          requires:
            - build
      - deploy:
          requires:
            - assemble
          filters:
            branches:
              only: master
      - docs-deploy:
          filters:
            tags:
              only: /^(\d+\.)(\d+\.)(\d+)$/
            branches:
              ignore: /.*/
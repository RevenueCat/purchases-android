buildscript {
    ext.kotlinVersion = "1.6.21"
    ext.compileVersion = 31
    ext.buildToolsVersion = "30.0.3"
    ext.minVersion = 14
    ext.billing5Version = "5.0.0"
    ext.billing4Version = "4.1.0"
    ext.lifecycleVersion = "2.5.0"
    ext.testLibrariesVersion = "1.4.0"
    ext.testJUnitVersion  = "1.1.3"
    ext.robolectricVersion = "4.8.1"
    ext.mockkVersion = "1.12.4"
    ext.assertJVersion = "3.22.0"
    ext.annotationVersion = "1.3.0"
    ext.androidxCoreVersion = "1.8.0"
    ext.mockwebserverVersion = "4.2.0"
    ext.tinkVersion = "1.8.0"

    repositories {
        mavenCentral()
        google()
    }
    dependencies {
        classpath "com.vanniktech:gradle-maven-publish-plugin:0.22.0"
        classpath 'com.android.tools.build:gradle:7.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.6.21"
        classpath "org.jetbrains.kotlinx:kover:0.6.1"
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.17.0-RC3"
    id "com.savvasdalkitsis.module-dependency-graph" version "0.9"
}

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.20.0"
}

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task detektAll(type: io.gitlab.arturbosch.detekt.Detekt) {
    description = "Runs over whole code base without the starting overhead for each module."
    buildUponDefaultConfig = true
    autoCorrect = true
    parallel = true
    setSource(files(rootDir))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/build/**")
    exclude("**/test/**/*.kt")
    exclude("examples/MagicWeather/**")
    baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml"))
    reports {
        xml.enabled = true
        xml.destination = file("build/reports/detekt/detekt.xml")
        html.enabled = false
        txt.enabled = false
    }
}

task detektAllBaseline(type: io.gitlab.arturbosch.detekt.DetektCreateBaselineTask) {
    description = "Overrides current top level baseline with issues found on this run." +
            "Issues found on the baseline will be ignored on detekt runs."
    buildUponDefaultConfig.set(true)
    ignoreFailures.set(true)
    parallel.set(true)
    setSource(files(rootDir))
    baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml"))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/build/**")
    exclude("**/test/**/*.kt")
}

apply plugin: 'org.jetbrains.dokka'

tasks.dokkaHtmlMultiModule.configure {
    outputDirectory.set(file("docs/" + project.property("VERSION_NAME")))
    includes.from("README.md")
}

apply plugin: 'kover'

koverMerged {
    enable()
    filters {
        projects {
            // Specifies the projects excluded from the merged tasks
            excludes.addAll(":api-tester", ":integration-tests", ":examples:purchase-tester")
        }
    }
}

buildscript {
    ext.compileVersion = 31
    ext.minVersion = 14
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.androidx.navigation.safeargs apply false
    alias libs.plugins.dependencyGraph
    alias libs.plugins.detekt
    alias libs.plugins.dokka
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.kotlin.kapt apply false
    alias libs.plugins.kotlin.parcelize apply false
    alias libs.plugins.kover
    alias libs.plugins.mavenPublish apply false
}

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.20.0"
}

allprojects {
    repositories {
        mavenCentral()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task detektAll(type: io.gitlab.arturbosch.detekt.Detekt) {
    description = "Runs over whole code base without the starting overhead for each module."
    buildUponDefaultConfig = true
    autoCorrect = true
    parallel = true
    setSource(files(rootDir))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/build/**")
    exclude("**/test/**/*.kt")
    exclude("examples/MagicWeather/**")
    baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml"))
    reports {
        xml.enabled = true
        xml.destination = file("build/reports/detekt/detekt.xml")
        html.enabled = false
        txt.enabled = false
    }
}

task detektAllBaseline(type: io.gitlab.arturbosch.detekt.DetektCreateBaselineTask) {
    description = "Overrides current top level baseline with issues found on this run." +
            "Issues found on the baseline will be ignored on detekt runs."
    buildUponDefaultConfig.set(true)
    ignoreFailures.set(true)
    parallel.set(true)
    setSource(files(rootDir))
    baseline.set(file("$rootDir/config/detekt/detekt-baseline.xml"))
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/build/**")
    exclude("**/test/**/*.kt")
}

tasks.dokkaHtmlMultiModule.configure {
    outputDirectory.set(file("docs/" + project.property("VERSION_NAME")))
    includes.from("README.md")
}

koverMerged {
    enable()
    filters {
        projects {
            // Specifies the projects excluded from the merged tasks
            excludes.addAll(":api-tester", ":integration-tests", ":examples:purchase-tester")
        }
    }
}

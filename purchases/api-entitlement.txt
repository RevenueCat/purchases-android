// Signature format: 4.0
package com.revenuecat.purchases {

  public enum AmazonLWAConsentStatus {
    enum_constant public static final com.revenuecat.purchases.AmazonLWAConsentStatus CONSENTED;
    enum_constant public static final com.revenuecat.purchases.AmazonLWAConsentStatus UNAVAILABLE;
  }

  public enum CacheFetchPolicy {
    enum_constant public static final com.revenuecat.purchases.CacheFetchPolicy CACHED_OR_FETCHED;
    enum_constant public static final com.revenuecat.purchases.CacheFetchPolicy CACHE_ONLY;
    enum_constant public static final com.revenuecat.purchases.CacheFetchPolicy FETCH_CURRENT;
    enum_constant public static final com.revenuecat.purchases.CacheFetchPolicy NOT_STALE_CACHED_OR_CURRENT;
    field public static final com.revenuecat.purchases.CacheFetchPolicy.Companion Companion;
  }

  public static final class CacheFetchPolicy.Companion {
    method public com.revenuecat.purchases.CacheFetchPolicy default();
  }

  public final class CoroutinesExtensionsCommonKt {
    method @kotlin.jvm.JvmSynthetic @kotlin.jvm.Throws(exceptionClasses=PurchasesTransactionException::class) public static suspend Object? awaitGetProducts(com.revenuecat.purchases.Purchases, java.util.List<java.lang.String> productIds, optional com.revenuecat.purchases.ProductType? type, kotlin.coroutines.Continuation<? super java.util.List<? extends com.revenuecat.purchases.models.StoreProduct>>);
    method @kotlin.jvm.JvmSynthetic public static suspend Object? awaitGetProductsResult(com.revenuecat.purchases.Purchases, java.util.List<java.lang.String> productIds, optional com.revenuecat.purchases.ProductType? type, kotlin.coroutines.Continuation<? super kotlin.Result<? extends java.util.List<? extends com.revenuecat.purchases.models.StoreProduct>>>);
    method @kotlin.jvm.JvmSynthetic @kotlin.jvm.Throws(exceptionClasses=PurchasesException::class) public static suspend Object? awaitOfferings(com.revenuecat.purchases.Purchases, kotlin.coroutines.Continuation<? super com.revenuecat.purchases.Offerings>);
    method @kotlin.jvm.JvmSynthetic public static suspend Object? awaitOfferingsResult(com.revenuecat.purchases.Purchases, kotlin.coroutines.Continuation<? super kotlin.Result<? extends com.revenuecat.purchases.Offerings>>);
    method @kotlin.jvm.JvmSynthetic @kotlin.jvm.Throws(exceptionClasses=PurchasesTransactionException::class) public static suspend Object? awaitPurchase(com.revenuecat.purchases.Purchases, com.revenuecat.purchases.PurchaseParams purchaseParams, kotlin.coroutines.Continuation<? super com.revenuecat.purchases.PurchaseResult>);
    method @kotlin.jvm.JvmSynthetic public static suspend Object? awaitPurchaseResult(com.revenuecat.purchases.Purchases, com.revenuecat.purchases.PurchaseParams purchaseParams, kotlin.coroutines.Continuation<? super kotlin.Result<? extends com.revenuecat.purchases.PurchaseResult>>);
    method @kotlin.jvm.JvmSynthetic @kotlin.jvm.Throws(exceptionClasses=PurchasesTransactionException::class) public static suspend Object? awaitRestore(com.revenuecat.purchases.Purchases, kotlin.coroutines.Continuation<? super com.revenuecat.purchases.CustomerInfo>);
    method @kotlin.jvm.JvmSynthetic public static suspend Object? awaitRestoreResult(com.revenuecat.purchases.Purchases, kotlin.coroutines.Continuation<? super kotlin.Result<? extends com.revenuecat.purchases.CustomerInfo>>);
    method public static suspend Object? awaitStorefrontCountryCode(com.revenuecat.purchases.Purchases, kotlin.coroutines.Continuation<? super java.lang.String>);
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize @kotlinx.parcelize.TypeParceler public final class CustomerInfo implements android.os.Parcelable com.revenuecat.purchases.models.RawDataContainer<org.json.JSONObject> {
    ctor public CustomerInfo(com.revenuecat.purchases.EntitlementInfos entitlements, java.util.Map<java.lang.String,? extends java.util.Date?> allExpirationDatesByProduct, java.util.Map<java.lang.String,? extends java.util.Date?> allPurchaseDatesByProduct, java.util.Date requestDate, int schemaVersion, java.util.Date firstSeen, String originalAppUserId, android.net.Uri? managementURL, java.util.Date? originalPurchaseDate, org.json.JSONObject jsonObject);
    method public java.util.Set<java.lang.String> getActiveSubscriptions();
    method public java.util.Map<java.lang.String,java.util.Date?> getAllExpirationDatesByProduct();
    method public java.util.Map<java.lang.String,java.util.Date?> getAllPurchaseDatesByProduct();
    method public java.util.Set<java.lang.String> getAllPurchasedProductIds();
    method @Deprecated public java.util.Set<java.lang.String> getAllPurchasedSkus();
    method public com.revenuecat.purchases.EntitlementInfos getEntitlements();
    method public java.util.Date? getExpirationDateForEntitlement(String entitlement);
    method public java.util.Date? getExpirationDateForProductId(String productId);
    method @Deprecated public java.util.Date? getExpirationDateForSku(String sku);
    method public java.util.Date getFirstSeen();
    method public java.util.Date? getLatestExpirationDate();
    method public android.net.Uri? getManagementURL();
    method public java.util.List<com.revenuecat.purchases.models.Transaction> getNonSubscriptionTransactions();
    method public String getOriginalAppUserId();
    method public java.util.Date? getOriginalPurchaseDate();
    method public java.util.Date? getPurchaseDateForEntitlement(String entitlement);
    method public java.util.Date? getPurchaseDateForProductId(String productId);
    method @Deprecated public java.util.Date? getPurchaseDateForSku(String sku);
    method public org.json.JSONObject getRawData();
    method public java.util.Date getRequestDate();
    method public int getSchemaVersion();
    method public java.util.Map<java.lang.String,com.revenuecat.purchases.SubscriptionInfo> getSubscriptionsByProductIdentifier();
    property public final java.util.Set<java.lang.String> activeSubscriptions;
    property public final java.util.Map<java.lang.String,java.util.Date?> allExpirationDatesByProduct;
    property public final java.util.Map<java.lang.String,java.util.Date?> allPurchaseDatesByProduct;
    property public final java.util.Set<java.lang.String> allPurchasedProductIds;
    property @Deprecated public final java.util.Set<java.lang.String> allPurchasedSkus;
    property public final com.revenuecat.purchases.EntitlementInfos entitlements;
    property public final java.util.Date firstSeen;
    property public final java.util.Date? latestExpirationDate;
    property public final android.net.Uri? managementURL;
    property public final java.util.List<com.revenuecat.purchases.models.Transaction> nonSubscriptionTransactions;
    property public final String originalAppUserId;
    property public final java.util.Date? originalPurchaseDate;
    property @kotlinx.parcelize.IgnoredOnParcel public org.json.JSONObject rawData;
    property public final java.util.Date requestDate;
    property public final int schemaVersion;
    property public final java.util.Map<java.lang.String,com.revenuecat.purchases.SubscriptionInfo> subscriptionsByProductIdentifier;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public final class DangerousSettings implements android.os.Parcelable {
    ctor public DangerousSettings(optional boolean autoSyncPurchases);
    method public boolean getAutoSyncPurchases();
    property public final boolean autoSyncPurchases;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize @kotlinx.parcelize.TypeParceler public final class EntitlementInfo implements android.os.Parcelable com.revenuecat.purchases.models.RawDataContainer<org.json.JSONObject> {
    ctor @Deprecated public EntitlementInfo(String identifier, boolean isActive, boolean willRenew, com.revenuecat.purchases.PeriodType periodType, java.util.Date latestPurchaseDate, java.util.Date originalPurchaseDate, java.util.Date? expirationDate, com.revenuecat.purchases.Store store, String productIdentifier, String? productPlanIdentifier, boolean isSandbox, java.util.Date? unsubscribeDetectedAt, java.util.Date? billingIssueDetectedAt, com.revenuecat.purchases.OwnershipType ownershipType, org.json.JSONObject jsonObject);
    ctor public EntitlementInfo(String identifier, boolean isActive, boolean willRenew, com.revenuecat.purchases.PeriodType periodType, java.util.Date latestPurchaseDate, java.util.Date originalPurchaseDate, java.util.Date? expirationDate, com.revenuecat.purchases.Store store, String productIdentifier, String? productPlanIdentifier, boolean isSandbox, java.util.Date? unsubscribeDetectedAt, java.util.Date? billingIssueDetectedAt, com.revenuecat.purchases.OwnershipType ownershipType, org.json.JSONObject jsonObject, optional com.revenuecat.purchases.VerificationResult verification);
    method public java.util.Date? getBillingIssueDetectedAt();
    method public java.util.Date? getExpirationDate();
    method public String getIdentifier();
    method public java.util.Date getLatestPurchaseDate();
    method public java.util.Date getOriginalPurchaseDate();
    method public com.revenuecat.purchases.OwnershipType getOwnershipType();
    method public com.revenuecat.purchases.PeriodType getPeriodType();
    method public String getProductIdentifier();
    method public String? getProductPlanIdentifier();
    method public org.json.JSONObject getRawData();
    method public com.revenuecat.purchases.Store getStore();
    method public java.util.Date? getUnsubscribeDetectedAt();
    method public com.revenuecat.purchases.VerificationResult getVerification();
    method public boolean getWillRenew();
    method public boolean isActive();
    method public boolean isSandbox();
    property public final java.util.Date? billingIssueDetectedAt;
    property public final java.util.Date? expirationDate;
    property public final String identifier;
    property public final boolean isActive;
    property public final boolean isSandbox;
    property public final java.util.Date latestPurchaseDate;
    property public final java.util.Date originalPurchaseDate;
    property public final com.revenuecat.purchases.OwnershipType ownershipType;
    property public final com.revenuecat.purchases.PeriodType periodType;
    property public final String productIdentifier;
    property public final String? productPlanIdentifier;
    property @kotlinx.parcelize.IgnoredOnParcel public org.json.JSONObject rawData;
    property public final com.revenuecat.purchases.Store store;
    property public final java.util.Date? unsubscribeDetectedAt;
    property public final com.revenuecat.purchases.VerificationResult verification;
    property public final boolean willRenew;
  }

  @kotlinx.parcelize.Parcelize public final class EntitlementInfos implements android.os.Parcelable {
    ctor @Deprecated public EntitlementInfos(java.util.Map<java.lang.String,com.revenuecat.purchases.EntitlementInfo> all);
    ctor public EntitlementInfos(java.util.Map<java.lang.String,com.revenuecat.purchases.EntitlementInfo> all, com.revenuecat.purchases.VerificationResult verification);
    method public operator com.revenuecat.purchases.EntitlementInfo? get(String s);
    method public java.util.Map<java.lang.String,com.revenuecat.purchases.EntitlementInfo> getActive();
    method public java.util.Map<java.lang.String,com.revenuecat.purchases.EntitlementInfo> getAll();
    method public com.revenuecat.purchases.VerificationResult getVerification();
    property public final java.util.Map<java.lang.String,com.revenuecat.purchases.EntitlementInfo> active;
    property public final java.util.Map<java.lang.String,com.revenuecat.purchases.EntitlementInfo> all;
    property public final com.revenuecat.purchases.VerificationResult verification;
  }

  public enum EntitlementVerificationMode {
    method public boolean isEnabled();
    property public final boolean isEnabled;
    enum_constant public static final com.revenuecat.purchases.EntitlementVerificationMode DISABLED;
    enum_constant public static final com.revenuecat.purchases.EntitlementVerificationMode INFORMATIONAL;
    field public static final com.revenuecat.purchases.EntitlementVerificationMode.Companion Companion;
  }

  public static final class EntitlementVerificationMode.Companion {
    method public com.revenuecat.purchases.EntitlementVerificationMode getDefault();
    property public final com.revenuecat.purchases.EntitlementVerificationMode default;
  }

  @kotlin.RequiresOptIn(level=kotlin.RequiresOptIn.Level.ERROR) @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) @kotlin.annotation.Target(allowedTargets={kotlin.annotation.AnnotationTarget.CLASS, kotlin.annotation.AnnotationTarget.FUNCTION, kotlin.annotation.AnnotationTarget.PROPERTY, kotlin.annotation.AnnotationTarget.CONSTRUCTOR}) public @interface ExperimentalPreviewRevenueCatPurchasesAPI {
  }

  @kotlin.RequiresOptIn(level=kotlin.RequiresOptIn.Level.ERROR, message="This is an internal RevenueCat API that may change frequently and without warning. " + "No compatibility guarantees are provided. It is strongly discouraged to use this API.") @kotlin.annotation.Retention(kotlin.annotation.AnnotationRetention.BINARY) @kotlin.annotation.Target(allowedTargets={kotlin.annotation.AnnotationTarget.CLASS, kotlin.annotation.AnnotationTarget.FUNCTION, kotlin.annotation.AnnotationTarget.PROPERTY, kotlin.annotation.AnnotationTarget.TYPEALIAS, kotlin.annotation.AnnotationTarget.CONSTRUCTOR}) public @interface InternalRevenueCatAPI {
  }

  public final class ListenerConversionsCommonKt {
    method public static void getOfferingsWith(com.revenuecat.purchases.Purchases, optional kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.PurchasesError,kotlin.Unit> onError, kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.Offerings,kotlin.Unit> onSuccess);
    method public static void getProductsWith(com.revenuecat.purchases.Purchases, java.util.List<java.lang.String> productIds, com.revenuecat.purchases.ProductType? type, optional kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.PurchasesError,kotlin.Unit> onError, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.revenuecat.purchases.models.StoreProduct>,kotlin.Unit> onGetStoreProducts);
    method public static void getProductsWith(com.revenuecat.purchases.Purchases, java.util.List<java.lang.String> productIds, optional kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.PurchasesError,kotlin.Unit> onError, kotlin.jvm.functions.Function1<? super java.util.List<? extends com.revenuecat.purchases.models.StoreProduct>,kotlin.Unit> onGetStoreProducts);
    method public static void getStorefrontCountryCodeWith(com.revenuecat.purchases.Purchases, optional kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.PurchasesError,kotlin.Unit> onError, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> onSuccess);
    method public static void purchaseWith(com.revenuecat.purchases.Purchases, com.revenuecat.purchases.PurchaseParams purchaseParams, optional kotlin.jvm.functions.Function2<? super com.revenuecat.purchases.PurchasesError,? super java.lang.Boolean,kotlin.Unit> onError, kotlin.jvm.functions.Function2<? super com.revenuecat.purchases.models.StoreTransaction?,? super com.revenuecat.purchases.CustomerInfo,kotlin.Unit> onSuccess);
    method public static void restorePurchasesWith(com.revenuecat.purchases.Purchases, optional kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.PurchasesError,kotlin.Unit> onError, kotlin.jvm.functions.Function1<? super com.revenuecat.purchases.CustomerInfo,kotlin.Unit> onSuccess);
  }

  public interface LogHandler {
    method public void d(String tag, String msg);
    method public void e(String tag, String msg, Throwable? throwable);
    method public void i(String tag, String msg);
    method public void v(String tag, String msg);
    method public void w(String tag, String msg);
  }

  public enum LogLevel {
    enum_constant public static final com.revenuecat.purchases.LogLevel DEBUG;
    enum_constant public static final com.revenuecat.purchases.LogLevel ERROR;
    enum_constant public static final com.revenuecat.purchases.LogLevel INFO;
    enum_constant public static final com.revenuecat.purchases.LogLevel VERBOSE;
    enum_constant public static final com.revenuecat.purchases.LogLevel WARN;
    field public static final com.revenuecat.purchases.LogLevel.Companion Companion;
  }

  public static final class LogLevel.Companion {
  }

  @dev.drewhamilton.poko.Poko public final class Offering {
    ctor public Offering(String identifier, String serverDescription, java.util.Map<java.lang.String,?> metadata, java.util.List<com.revenuecat.purchases.Package> availablePackages);
    ctor public Offering(String identifier, String serverDescription, java.util.Map<java.lang.String,?> metadata, java.util.List<com.revenuecat.purchases.Package> availablePackages, optional @com.revenuecat.purchases.InternalRevenueCatAPI com.revenuecat.purchases.paywalls.PaywallData? paywall, optional @com.revenuecat.purchases.InternalRevenueCatAPI com.revenuecat.purchases.Offering.PaywallComponents? paywallComponents);
    method public operator com.revenuecat.purchases.Package get(String s);
    method public com.revenuecat.purchases.Package? getAnnual();
    method public java.util.List<com.revenuecat.purchases.Package> getAvailablePackages();
    method public String getIdentifier();
    method public com.revenuecat.purchases.Package? getLifetime();
    method public java.util.Map<java.lang.String,java.lang.Object> getMetadata();
    method public String getMetadataString(String key, String default);
    method public com.revenuecat.purchases.Package? getMonthly();
    method @kotlin.jvm.Throws(exceptionClasses=NoSuchElementException::class) public com.revenuecat.purchases.Package getPackage(String identifier) throws java.util.NoSuchElementException;
    method public com.revenuecat.purchases.paywalls.PaywallData? getPaywall();
    method public com.revenuecat.purchases.Offering.PaywallComponents? getPaywallComponents();
    method public String getServerDescription();
    method public com.revenuecat.purchases.Package? getSixMonth();
    method public com.revenuecat.purchases.Package? getThreeMonth();
    method public com.revenuecat.purchases.Package? getTwoMonth();
    method public com.revenuecat.purchases.Package? getWeekly();
    method public boolean hasPaywall();
    property public final com.revenuecat.purchases.Package? annual;
    property public final java.util.List<com.revenuecat.purchases.Package> availablePackages;
    property public final boolean hasPaywall;
    property public final String identifier;
    property public final com.revenuecat.purchases.Package? lifetime;
    property public final java.util.Map<java.lang.String,java.lang.Object> metadata;
    property public final com.revenuecat.purchases.Package? monthly;
    property public final com.revenuecat.purchases.paywalls.PaywallData? paywall;
    property public final com.revenuecat.purchases.Offering.PaywallComponents? paywallComponents;
    property public final String serverDescription;
    property public final com.revenuecat.purchases.Package? sixMonth;
    property public final com.revenuecat.purchases.Package? threeMonth;
    property public final com.revenuecat.purchases.Package? twoMonth;
    property public final com.revenuecat.purchases.Package? weekly;
  }

  @dev.drewhamilton.poko.Poko public final class Offerings {
    ctor public Offerings(com.revenuecat.purchases.Offering? current, java.util.Map<java.lang.String,com.revenuecat.purchases.Offering> all);
    method public operator com.revenuecat.purchases.Offering? get(String identifier);
    method public java.util.Map<java.lang.String,com.revenuecat.purchases.Offering> getAll();
    method public com.revenuecat.purchases.Offering? getCurrent();
    method public com.revenuecat.purchases.Offering? getCurrentOfferingForPlacement(String placementId);
    method public com.revenuecat.purchases.Offering? getOffering(String identifier);
    property public final java.util.Map<java.lang.String,com.revenuecat.purchases.Offering> all;
    property public final com.revenuecat.purchases.Offering? current;
  }

  @kotlinx.serialization.Serializable public enum OwnershipType {
    enum_constant @kotlinx.serialization.SerialName("FAMILY_SHARED") public static final com.revenuecat.purchases.OwnershipType FAMILY_SHARED;
    enum_constant @kotlinx.serialization.SerialName("PURCHASED") public static final com.revenuecat.purchases.OwnershipType PURCHASED;
    enum_constant @kotlinx.serialization.SerialName("UNKNOWN") public static final com.revenuecat.purchases.OwnershipType UNKNOWN;
  }

  @dev.drewhamilton.poko.Poko public final class Package {
    ctor public Package(String identifier, com.revenuecat.purchases.PackageType packageType, com.revenuecat.purchases.models.StoreProduct product, com.revenuecat.purchases.PresentedOfferingContext presentedOfferingContext);
    ctor @Deprecated public Package(String identifier, com.revenuecat.purchases.PackageType packageType, com.revenuecat.purchases.models.StoreProduct product, String offering);
    method public String getIdentifier();
    method @Deprecated public String getOffering();
    method public com.revenuecat.purchases.PackageType getPackageType();
    method public com.revenuecat.purchases.PresentedOfferingContext getPresentedOfferingContext();
    method public com.revenuecat.purchases.models.StoreProduct getProduct();
    property public final String identifier;
    property @Deprecated public final String offering;
    property public final com.revenuecat.purchases.PackageType packageType;
    property public final com.revenuecat.purchases.PresentedOfferingContext presentedOfferingContext;
    property public final com.revenuecat.purchases.models.StoreProduct product;
  }

  public enum PackageType {
    method public String? getIdentifier();
    property public final String? identifier;
    enum_constant public static final com.revenuecat.purchases.PackageType ANNUAL;
    enum_constant public static final com.revenuecat.purchases.PackageType CUSTOM;
    enum_constant public static final com.revenuecat.purchases.PackageType LIFETIME;
    enum_constant public static final com.revenuecat.purchases.PackageType MONTHLY;
    enum_constant public static final com.revenuecat.purchases.PackageType SIX_MONTH;
    enum_constant public static final com.revenuecat.purchases.PackageType THREE_MONTH;
    enum_constant public static final com.revenuecat.purchases.PackageType TWO_MONTH;
    enum_constant public static final com.revenuecat.purchases.PackageType UNKNOWN;
    enum_constant public static final com.revenuecat.purchases.PackageType WEEKLY;
  }

  @kotlinx.serialization.Serializable public enum PeriodType {
    enum_constant @kotlinx.serialization.SerialName("intro") public static final com.revenuecat.purchases.PeriodType INTRO;
    enum_constant @kotlinx.serialization.SerialName("normal") public static final com.revenuecat.purchases.PeriodType NORMAL;
    enum_constant @kotlinx.serialization.SerialName("prepaid") public static final com.revenuecat.purchases.PeriodType PREPAID;
    enum_constant @kotlinx.serialization.SerialName("trial") public static final com.revenuecat.purchases.PeriodType TRIAL;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public final class PresentedOfferingContext implements android.os.Parcelable {
    ctor public PresentedOfferingContext(String offeringIdentifier);
    ctor public PresentedOfferingContext(String offeringIdentifier, String? placementIdentifier, com.revenuecat.purchases.PresentedOfferingContext.TargetingContext? targetingContext);
    method public String getOfferingIdentifier();
    method public String? getPlacementIdentifier();
    method public com.revenuecat.purchases.PresentedOfferingContext.TargetingContext? getTargetingContext();
    property public final String offeringIdentifier;
    property public final String? placementIdentifier;
    property public final com.revenuecat.purchases.PresentedOfferingContext.TargetingContext? targetingContext;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public static final class PresentedOfferingContext.TargetingContext implements android.os.Parcelable {
    ctor public PresentedOfferingContext.TargetingContext(int revision, String ruleId);
    method public int getRevision();
    method public String getRuleId();
    property public final int revision;
    property public final String ruleId;
  }

  public enum ProductType {
    enum_constant public static final com.revenuecat.purchases.ProductType INAPP;
    enum_constant public static final com.revenuecat.purchases.ProductType SUBS;
    enum_constant public static final com.revenuecat.purchases.ProductType UNKNOWN;
  }

  @dev.drewhamilton.poko.Poko public final class PurchaseParams {
    ctor public PurchaseParams(com.revenuecat.purchases.PurchaseParams.Builder builder);
    method public com.revenuecat.purchases.PurchaseParams.Builder getBuilder();
    method public com.revenuecat.purchases.models.GoogleReplacementMode getGoogleReplacementMode();
    method public String? getOldProductId();
    method public Boolean? isPersonalizedPrice();
    property public final com.revenuecat.purchases.PurchaseParams.Builder builder;
    property public final com.revenuecat.purchases.models.GoogleReplacementMode googleReplacementMode;
    property public final Boolean? isPersonalizedPrice;
    property public final String? oldProductId;
  }

  public static class PurchaseParams.Builder {
    ctor public PurchaseParams.Builder(android.app.Activity activity, com.revenuecat.purchases.models.StoreProduct storeProduct);
    ctor public PurchaseParams.Builder(android.app.Activity activity, com.revenuecat.purchases.models.SubscriptionOption subscriptionOption);
    ctor public PurchaseParams.Builder(android.app.Activity activity, com.revenuecat.purchases.Package packageToPurchase);
    method @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI public final com.revenuecat.purchases.PurchaseParams.Builder addOnPackages(java.util.List<com.revenuecat.purchases.Package> addOnPackages);
    method @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI public final com.revenuecat.purchases.PurchaseParams.Builder addOnStoreProducts(java.util.List<? extends com.revenuecat.purchases.models.StoreProduct> addOnStoreProducts);
    method public com.revenuecat.purchases.PurchaseParams build();
    method public final com.revenuecat.purchases.PurchaseParams.Builder googleReplacementMode(com.revenuecat.purchases.models.GoogleReplacementMode googleReplacementMode);
    method public final com.revenuecat.purchases.PurchaseParams.Builder isPersonalizedPrice(boolean isPersonalizedPrice);
    method public final com.revenuecat.purchases.PurchaseParams.Builder oldProductId(String oldProductId);
    method public final com.revenuecat.purchases.PurchaseParams.Builder presentedOfferingContext(com.revenuecat.purchases.PresentedOfferingContext presentedOfferingContext);
  }

  @dev.drewhamilton.poko.Poko public final class PurchaseResult {
    ctor public PurchaseResult(com.revenuecat.purchases.models.StoreTransaction storeTransaction, com.revenuecat.purchases.CustomerInfo customerInfo);
    method public com.revenuecat.purchases.CustomerInfo getCustomerInfo();
    method public com.revenuecat.purchases.models.StoreTransaction getStoreTransaction();
    property public final com.revenuecat.purchases.CustomerInfo customerInfo;
    property public final com.revenuecat.purchases.models.StoreTransaction storeTransaction;
  }

  public final class Purchases {
    method public static void canMakePayments(android.content.Context context, com.revenuecat.purchases.interfaces.Callback<java.lang.Boolean> callback);
    method public static void canMakePayments(android.content.Context context, optional java.util.List<? extends com.revenuecat.purchases.models.BillingFeature> features, com.revenuecat.purchases.interfaces.Callback<java.lang.Boolean> callback);
    method public void close();
    method public static com.revenuecat.purchases.Purchases configureInCustomEntitlementsComputationMode(android.content.Context context, String apiKey, String appUserID);
    method public static com.revenuecat.purchases.Purchases configureInCustomEntitlementsComputationMode(com.revenuecat.purchases.PurchasesConfigurationForCustomEntitlementsComputationMode configuration);
    method @kotlin.jvm.Synchronized public String getAppUserID();
    method public static String getFrameworkVersion();
    method @kotlin.jvm.Synchronized public static com.revenuecat.purchases.LogHandler getLogHandler();
    method public static com.revenuecat.purchases.LogLevel getLogLevel();
    method public void getOfferings(com.revenuecat.purchases.interfaces.ReceiveOfferingsCallback listener);
    method public static com.revenuecat.purchases.common.PlatformInfo getPlatformInfo();
    method public void getProducts(java.util.List<java.lang.String> productIds, com.revenuecat.purchases.interfaces.GetStoreProductsCallback callback);
    method public void getProducts(java.util.List<java.lang.String> productIds, optional com.revenuecat.purchases.ProductType? type, com.revenuecat.purchases.interfaces.GetStoreProductsCallback callback);
    method public static java.net.URL? getProxyURL();
    method public static com.revenuecat.purchases.Purchases getSharedInstance();
    method @kotlin.jvm.Synchronized public String? getStorefrontCountryCode();
    method public void getStorefrontCountryCode(com.revenuecat.purchases.interfaces.GetStorefrontCallback callback);
    method @kotlin.jvm.Synchronized public com.revenuecat.purchases.interfaces.UpdatedCustomerInfoListener? getUpdatedCustomerInfoListener();
    method public static boolean isConfigured();
    method public void purchase(com.revenuecat.purchases.PurchaseParams purchaseParams, com.revenuecat.purchases.interfaces.PurchaseCallback callback);
    method public void removeUpdatedCustomerInfoListener();
    method public void restorePurchases(com.revenuecat.purchases.interfaces.ReceiveCustomerInfoCallback callback);
    method @kotlin.jvm.Synchronized public static void setLogHandler(com.revenuecat.purchases.LogHandler);
    method public static void setLogLevel(com.revenuecat.purchases.LogLevel);
    method public static void setPlatformInfo(com.revenuecat.purchases.common.PlatformInfo);
    method public static void setProxyURL(java.net.URL?);
    method @kotlin.jvm.Synchronized public void setUpdatedCustomerInfoListener(com.revenuecat.purchases.interfaces.UpdatedCustomerInfoListener?);
    method public void showInAppMessagesIfNeeded(android.app.Activity activity);
    method public void showInAppMessagesIfNeeded(android.app.Activity activity, optional java.util.List<? extends com.revenuecat.purchases.models.InAppMessageType> inAppMessageTypes);
    method public void switchUser(String newAppUserID);
    property @kotlin.jvm.Synchronized public final String appUserID;
    property public static final String frameworkVersion;
    property public static final boolean isConfigured;
    property @kotlin.jvm.Synchronized public static final com.revenuecat.purchases.LogHandler logHandler;
    property public static final com.revenuecat.purchases.LogLevel logLevel;
    property public static final com.revenuecat.purchases.common.PlatformInfo platformInfo;
    property public static final java.net.URL? proxyURL;
    property public static final com.revenuecat.purchases.Purchases sharedInstance;
    property @kotlin.jvm.Synchronized public final String? storefrontCountryCode;
    property @kotlin.jvm.Synchronized public final com.revenuecat.purchases.interfaces.UpdatedCustomerInfoListener? updatedCustomerInfoListener;
    field public static final com.revenuecat.purchases.Purchases.Companion Companion;
  }

  public static final class Purchases.Companion {
    method public void canMakePayments(android.content.Context context, com.revenuecat.purchases.interfaces.Callback<java.lang.Boolean> callback);
    method public void canMakePayments(android.content.Context context, optional java.util.List<? extends com.revenuecat.purchases.models.BillingFeature> features, com.revenuecat.purchases.interfaces.Callback<java.lang.Boolean> callback);
    method public com.revenuecat.purchases.Purchases configureInCustomEntitlementsComputationMode(android.content.Context context, String apiKey, String appUserID);
    method public com.revenuecat.purchases.Purchases configureInCustomEntitlementsComputationMode(com.revenuecat.purchases.PurchasesConfigurationForCustomEntitlementsComputationMode configuration);
    method public String getFrameworkVersion();
    method @kotlin.jvm.Synchronized public com.revenuecat.purchases.LogHandler getLogHandler();
    method public com.revenuecat.purchases.LogLevel getLogLevel();
    method public com.revenuecat.purchases.common.PlatformInfo getPlatformInfo();
    method public java.net.URL? getProxyURL();
    method public com.revenuecat.purchases.Purchases getSharedInstance();
    method public boolean isConfigured();
    method @kotlin.jvm.Synchronized public void setLogHandler(com.revenuecat.purchases.LogHandler);
    method public void setLogLevel(com.revenuecat.purchases.LogLevel);
    method public void setPlatformInfo(com.revenuecat.purchases.common.PlatformInfo);
    method public void setProxyURL(java.net.URL?);
    property public final String frameworkVersion;
    property public final boolean isConfigured;
    property @kotlin.jvm.Synchronized public final com.revenuecat.purchases.LogHandler logHandler;
    property public final com.revenuecat.purchases.LogLevel logLevel;
    property public final com.revenuecat.purchases.common.PlatformInfo platformInfo;
    property public final java.net.URL? proxyURL;
    property public final com.revenuecat.purchases.Purchases sharedInstance;
  }

  @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI public static sealed interface Purchases.DeepLink {
  }

  public static final class Purchases.DeepLink.WebPurchaseRedemption implements com.revenuecat.purchases.Purchases.DeepLink {
  }

  public enum PurchasesAreCompletedBy {
    enum_constant public static final com.revenuecat.purchases.PurchasesAreCompletedBy MY_APP;
    enum_constant public static final com.revenuecat.purchases.PurchasesAreCompletedBy REVENUECAT;
  }

  public class PurchasesConfiguration {
    ctor public PurchasesConfiguration(com.revenuecat.purchases.PurchasesConfiguration.Builder builder);
    method public final String getApiKey();
    method public final String? getAppUserID();
    method public final boolean getAutomaticDeviceIdentifierCollectionEnabled();
    method public final android.content.Context getContext();
    method public final com.revenuecat.purchases.DangerousSettings getDangerousSettings();
    method public final boolean getDiagnosticsEnabled();
    method @Deprecated public final boolean getObserverMode();
    method public final boolean getPendingTransactionsForPrepaidPlansEnabled();
    method public final String? getPreferredUILocaleOverride();
    method public final com.revenuecat.purchases.PurchasesAreCompletedBy getPurchasesAreCompletedBy();
    method public final java.util.concurrent.ExecutorService? getService();
    method public final boolean getShowInAppMessagesAutomatically();
    method public final com.revenuecat.purchases.Store getStore();
    method public final com.revenuecat.purchases.EntitlementVerificationMode getVerificationMode();
    property public final String apiKey;
    property public final String? appUserID;
    property public final boolean automaticDeviceIdentifierCollectionEnabled;
    property public final android.content.Context context;
    property public final com.revenuecat.purchases.DangerousSettings dangerousSettings;
    property public final boolean diagnosticsEnabled;
    property @Deprecated public final boolean observerMode;
    property public final boolean pendingTransactionsForPrepaidPlansEnabled;
    property public final String? preferredUILocaleOverride;
    property public final com.revenuecat.purchases.PurchasesAreCompletedBy purchasesAreCompletedBy;
    property public final java.util.concurrent.ExecutorService? service;
    property public final boolean showInAppMessagesAutomatically;
    property public final com.revenuecat.purchases.Store store;
    property public final com.revenuecat.purchases.EntitlementVerificationMode verificationMode;
  }

  public static class PurchasesConfiguration.Builder {
    ctor public PurchasesConfiguration.Builder(android.content.Context context, String apiKey);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder appUserID(String? appUserID);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder automaticDeviceIdentifierCollectionEnabled(boolean automaticDeviceIdentifierCollectionEnabled);
    method public com.revenuecat.purchases.PurchasesConfiguration build();
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder dangerousSettings(com.revenuecat.purchases.DangerousSettings dangerousSettings);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder diagnosticsEnabled(boolean diagnosticsEnabled);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder entitlementVerificationMode(com.revenuecat.purchases.EntitlementVerificationMode verificationMode);
    method @Deprecated @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI @kotlin.jvm.JvmSynthetic public com.revenuecat.purchases.PurchasesConfiguration.Builder informationalVerificationModeAndDiagnosticsEnabled(boolean enabled);
    method @Deprecated public final com.revenuecat.purchases.PurchasesConfiguration.Builder observerMode(boolean observerMode);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder pendingTransactionsForPrepaidPlansEnabled(boolean pendingTransactionsForPrepaidPlansEnabled);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder preferredUILocaleOverride(String? localeString);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder purchasesAreCompletedBy(com.revenuecat.purchases.PurchasesAreCompletedBy purchasesAreCompletedBy);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder service(java.util.concurrent.ExecutorService service);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder showInAppMessagesAutomatically(boolean showInAppMessagesAutomatically);
    method public final com.revenuecat.purchases.PurchasesConfiguration.Builder store(com.revenuecat.purchases.Store store);
  }

  public final class PurchasesConfigurationForCustomEntitlementsComputationMode {
  }

  public static final class PurchasesConfigurationForCustomEntitlementsComputationMode.Builder {
    ctor public PurchasesConfigurationForCustomEntitlementsComputationMode.Builder(android.content.Context context, String apiKey, String appUserID);
    method public com.revenuecat.purchases.PurchasesConfigurationForCustomEntitlementsComputationMode build();
    method public com.revenuecat.purchases.PurchasesConfigurationForCustomEntitlementsComputationMode.Builder pendingTransactionsForPrepaidPlansEnabled(boolean enabled);
    method public com.revenuecat.purchases.PurchasesConfigurationForCustomEntitlementsComputationMode.Builder showInAppMessagesAutomatically(boolean enabled);
  }

  @androidx.compose.runtime.Immutable @kotlinx.parcelize.Parcelize public final class PurchasesError implements android.os.Parcelable java.io.Serializable {
    ctor public PurchasesError(com.revenuecat.purchases.PurchasesErrorCode code, optional String? underlyingErrorMessage);
    method public com.revenuecat.purchases.PurchasesErrorCode getCode();
    method public String getMessage();
    method public String? getUnderlyingErrorMessage();
    property public final com.revenuecat.purchases.PurchasesErrorCode code;
    property public final String message;
    property public final String? underlyingErrorMessage;
    field public static final com.revenuecat.purchases.PurchasesError.Companion Companion;
  }

  public static final class PurchasesError.Companion {
  }

  public enum PurchasesErrorCode {
    method public int getCode();
    method public String getDescription();
    property public final int code;
    property public final String description;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode ConfigurationError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode CustomerInfoError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode EmptySubscriberAttributesError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode IneligibleError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode InsufficientPermissionsError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode InvalidAppUserIdError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode InvalidAppleSubscriptionKeyError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode InvalidCredentialsError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode InvalidReceiptError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode InvalidSubscriberAttributesError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode LogOutWithAnonymousUserError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode MissingReceiptFileError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode NetworkError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode OperationAlreadyInProgressError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode PaymentPendingError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode ProductAlreadyPurchasedError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode ProductNotAvailableForPurchaseError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode PurchaseCancelledError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode PurchaseInvalidError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode PurchaseNotAllowedError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode ReceiptAlreadyInUseError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode SignatureVerificationError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode StoreProblemError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode TestStoreSimulatedPurchaseError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode UnexpectedBackendResponseError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode UnknownBackendError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode UnknownError;
    enum_constant public static final com.revenuecat.purchases.PurchasesErrorCode UnsupportedError;
  }

  public class PurchasesException extends java.lang.Exception {
    ctor public PurchasesException(com.revenuecat.purchases.PurchasesError error);
    method public final com.revenuecat.purchases.PurchasesErrorCode getCode();
    method public final com.revenuecat.purchases.PurchasesError getError();
    method public final String? getUnderlyingErrorMessage();
    property public final com.revenuecat.purchases.PurchasesErrorCode code;
    property public final com.revenuecat.purchases.PurchasesError error;
    property public String message;
    property public final String? underlyingErrorMessage;
  }

  public final class PurchasesTransactionException extends com.revenuecat.purchases.PurchasesException {
    ctor public PurchasesTransactionException(com.revenuecat.purchases.PurchasesError purchasesError, boolean userCancelled);
    method public boolean getUserCancelled();
    property public final boolean userCancelled;
  }

  public interface ReplacementMode extends android.os.Parcelable {
    method public String getName();
    property public abstract String name;
  }

  @kotlinx.serialization.Serializable(with=StoreSerializer::class) public enum Store {
    enum_constant public static final com.revenuecat.purchases.Store AMAZON;
    enum_constant public static final com.revenuecat.purchases.Store APP_STORE;
    enum_constant public static final com.revenuecat.purchases.Store EXTERNAL;
    enum_constant public static final com.revenuecat.purchases.Store MAC_APP_STORE;
    enum_constant public static final com.revenuecat.purchases.Store PADDLE;
    enum_constant public static final com.revenuecat.purchases.Store PLAY_STORE;
    enum_constant public static final com.revenuecat.purchases.Store PROMOTIONAL;
    enum_constant public static final com.revenuecat.purchases.Store RC_BILLING;
    enum_constant public static final com.revenuecat.purchases.Store STRIPE;
    enum_constant public static final com.revenuecat.purchases.Store TEST_STORE;
    enum_constant public static final com.revenuecat.purchases.Store UNKNOWN_STORE;
  }

  public final class SubscriptionInfo {
    ctor @Deprecated public SubscriptionInfo(String productIdentifier, java.util.Date purchaseDate, java.util.Date? originalPurchaseDate, java.util.Date? expiresDate, com.revenuecat.purchases.Store store, java.util.Date? unsubscribeDetectedAt, boolean isSandbox, java.util.Date? billingIssuesDetectedAt, java.util.Date? gracePeriodExpiresDate, optional com.revenuecat.purchases.OwnershipType ownershipType, com.revenuecat.purchases.PeriodType periodType, java.util.Date? refundedAt, String? storeTransactionId, java.util.Date requestDate);
    ctor public SubscriptionInfo(String productIdentifier, java.util.Date purchaseDate, java.util.Date? originalPurchaseDate, java.util.Date? expiresDate, com.revenuecat.purchases.Store store, java.util.Date? unsubscribeDetectedAt, boolean isSandbox, java.util.Date? billingIssuesDetectedAt, java.util.Date? gracePeriodExpiresDate, optional com.revenuecat.purchases.OwnershipType ownershipType, com.revenuecat.purchases.PeriodType periodType, java.util.Date? refundedAt, String? storeTransactionId, java.util.Date? autoResumeDate, String? displayName, com.revenuecat.purchases.models.Price? price, String? productPlanIdentifier, android.net.Uri? managementURL, java.util.Date requestDate);
    ctor @Deprecated public SubscriptionInfo(String productIdentifier, java.util.Date purchaseDate, java.util.Date? originalPurchaseDate, java.util.Date? expiresDate, com.revenuecat.purchases.Store store, java.util.Date? unsubscribeDetectedAt, boolean isSandbox, java.util.Date? billingIssuesDetectedAt, java.util.Date? gracePeriodExpiresDate, optional com.revenuecat.purchases.OwnershipType ownershipType, com.revenuecat.purchases.PeriodType periodType, java.util.Date? refundedAt, String? storeTransactionId, java.util.Date? autoResumeDate, String? displayName, com.revenuecat.purchases.models.Price? price, String? productPlanIdentifier, java.util.Date requestDate);
    method public java.util.Date? getAutoResumeDate();
    method public java.util.Date? getBillingIssuesDetectedAt();
    method public String? getDisplayName();
    method public java.util.Date? getExpiresDate();
    method public java.util.Date? getGracePeriodExpiresDate();
    method public android.net.Uri? getManagementURL();
    method public java.util.Date? getOriginalPurchaseDate();
    method public com.revenuecat.purchases.OwnershipType getOwnershipType();
    method public com.revenuecat.purchases.PeriodType getPeriodType();
    method public com.revenuecat.purchases.models.Price? getPrice();
    method public String getProductIdentifier();
    method public String? getProductPlanIdentifier();
    method public java.util.Date getPurchaseDate();
    method public java.util.Date? getRefundedAt();
    method public com.revenuecat.purchases.Store getStore();
    method public String? getStoreTransactionId();
    method public java.util.Date? getUnsubscribeDetectedAt();
    method public boolean getWillRenew();
    method public boolean isActive();
    method public boolean isSandbox();
    property public final java.util.Date? autoResumeDate;
    property public final java.util.Date? billingIssuesDetectedAt;
    property public final String? displayName;
    property public final java.util.Date? expiresDate;
    property public final java.util.Date? gracePeriodExpiresDate;
    property public final boolean isActive;
    property public final boolean isSandbox;
    property public final android.net.Uri? managementURL;
    property public final java.util.Date? originalPurchaseDate;
    property public final com.revenuecat.purchases.OwnershipType ownershipType;
    property public final com.revenuecat.purchases.PeriodType periodType;
    property public final com.revenuecat.purchases.models.Price? price;
    property public final String productIdentifier;
    property public final String? productPlanIdentifier;
    property public final java.util.Date purchaseDate;
    property public final java.util.Date? refundedAt;
    property public final com.revenuecat.purchases.Store store;
    property public final String? storeTransactionId;
    property public final java.util.Date? unsubscribeDetectedAt;
    property public final boolean willRenew;
  }

  public enum VerificationResult {
    method public boolean isVerified();
    property public final boolean isVerified;
    enum_constant public static final com.revenuecat.purchases.VerificationResult FAILED;
    enum_constant public static final com.revenuecat.purchases.VerificationResult NOT_REQUESTED;
    enum_constant public static final com.revenuecat.purchases.VerificationResult VERIFIED;
    enum_constant public static final com.revenuecat.purchases.VerificationResult VERIFIED_ON_DEVICE;
  }

  public final class WebPurchaseRedemption {
  }

}

package com.revenuecat.purchases.amazon {

  public abstract sealed class AmazonPurchasingData implements com.revenuecat.purchases.models.PurchasingData {
  }

  @dev.drewhamilton.poko.Poko public static final class AmazonPurchasingData.Product extends com.revenuecat.purchases.amazon.AmazonPurchasingData {
    ctor public AmazonPurchasingData.Product(com.revenuecat.purchases.amazon.AmazonStoreProduct storeProduct);
    method public String getProductId();
    method public com.revenuecat.purchases.ProductType getProductType();
    method public com.revenuecat.purchases.amazon.AmazonStoreProduct getStoreProduct();
    property public String productId;
    property public com.revenuecat.purchases.ProductType productType;
    property public final com.revenuecat.purchases.amazon.AmazonStoreProduct storeProduct;
  }

  @dev.drewhamilton.poko.Poko public final class AmazonStoreProduct implements com.revenuecat.purchases.models.StoreProduct {
    ctor @Deprecated public AmazonStoreProduct(String id, com.revenuecat.purchases.ProductType type, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.Price price, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, String iconUrl, com.revenuecat.purchases.models.Period? freeTrialPeriod, org.json.JSONObject originalProductJSON, optional String? presentedOfferingIdentifier);
    ctor public AmazonStoreProduct(String id, com.revenuecat.purchases.ProductType type, String name, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.Price price, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, String iconUrl, com.revenuecat.purchases.models.Period? freeTrialPeriod, org.json.JSONObject originalProductJSON);
    ctor public AmazonStoreProduct(String id, com.revenuecat.purchases.ProductType type, String name, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.Price price, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, String iconUrl, com.revenuecat.purchases.models.Period? freeTrialPeriod, org.json.JSONObject originalProductJSON, optional com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    ctor @Deprecated public AmazonStoreProduct(String id, com.revenuecat.purchases.ProductType type, String name, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.Price price, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, String iconUrl, com.revenuecat.purchases.models.Period? freeTrialPeriod, org.json.JSONObject originalProductJSON, String presentedOfferingIdentifier);
    method @Deprecated public com.revenuecat.purchases.models.StoreProduct copyWithOfferingId(String offeringId);
    method public com.revenuecat.purchases.models.StoreProduct copyWithPresentedOfferingContext(com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    method public com.revenuecat.purchases.models.SubscriptionOption? getDefaultOption();
    method public String getDescription();
    method public com.revenuecat.purchases.models.Period? getFreeTrialPeriod();
    method public String getIconUrl();
    method public String getId();
    method public String getName();
    method public org.json.JSONObject getOriginalProductJSON();
    method public com.revenuecat.purchases.models.Period? getPeriod();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public com.revenuecat.purchases.models.Price getPrice();
    method public com.revenuecat.purchases.amazon.AmazonPurchasingData getPurchasingData();
    method @Deprecated public String getSku();
    method public com.revenuecat.purchases.models.SubscriptionOptions? getSubscriptionOptions();
    method public String getTitle();
    method public com.revenuecat.purchases.ProductType getType();
    property public com.revenuecat.purchases.models.SubscriptionOption? defaultOption;
    property public String description;
    property public final com.revenuecat.purchases.models.Period? freeTrialPeriod;
    property public final String iconUrl;
    property public String id;
    property public String name;
    property public final org.json.JSONObject originalProductJSON;
    property public com.revenuecat.purchases.models.Period? period;
    property public com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public String? presentedOfferingIdentifier;
    property public com.revenuecat.purchases.models.Price price;
    property public com.revenuecat.purchases.amazon.AmazonPurchasingData purchasingData;
    property @Deprecated public String sku;
    property public com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions;
    property public String title;
    property public com.revenuecat.purchases.ProductType type;
  }

  public final class AmazonStoreProductKt {
    method public static com.revenuecat.purchases.amazon.AmazonStoreProduct? getAmazonProduct(com.revenuecat.purchases.models.StoreProduct);
  }

}

package com.revenuecat.purchases.backup {

  public final class RevenueCatBackupAgent extends android.app.backup.BackupAgentHelper {
    ctor public RevenueCatBackupAgent();
    method public void onBackup(android.os.ParcelFileDescriptor? oldState, android.app.backup.BackupDataOutput? data, android.os.ParcelFileDescriptor? newState);
    method public void onRestore(android.app.backup.BackupDataInput? data, long appVersionCode, android.os.ParcelFileDescriptor? newState);
    field public static final com.revenuecat.purchases.backup.RevenueCatBackupAgent.Companion Companion;
    field public static final String REVENUECAT_PREFS_FILE_NAME = "com_revenuecat_purchases_preferences";
  }

  public static final class RevenueCatBackupAgent.Companion {
  }

}

package com.revenuecat.purchases.common {

  @dev.drewhamilton.poko.Poko public final class PlatformInfo {
    ctor public PlatformInfo(String flavor, String? version);
    method public String getFlavor();
    method public String? getVersion();
    property public final String flavor;
    property public final String? version;
  }

}

package com.revenuecat.purchases.customercenter {

  @dev.drewhamilton.poko.Poko public final class CustomActionData {
    ctor public CustomActionData(String actionIdentifier, String? purchaseIdentifier);
    method public String getActionIdentifier();
    method public String? getPurchaseIdentifier();
    property public final String actionIdentifier;
    property public final String? purchaseIdentifier;
  }

  public interface CustomerCenterListener {
    method public default void onCustomActionSelected(String actionIdentifier, String? purchaseIdentifier);
    method public default void onFeedbackSurveyCompleted(String feedbackSurveyOptionId);
    method public default void onManagementOptionSelected(com.revenuecat.purchases.customercenter.CustomerCenterManagementOption action);
    method public default void onRestoreCompleted(com.revenuecat.purchases.CustomerInfo customerInfo);
    method public default void onRestoreFailed(com.revenuecat.purchases.PurchasesError error);
    method public default void onRestoreStarted();
    method public default void onShowingManageSubscriptions();
  }

  public interface CustomerCenterManagementOption {
  }

  public static final class CustomerCenterManagementOption.Cancel implements com.revenuecat.purchases.customercenter.CustomerCenterManagementOption {
    field public static final com.revenuecat.purchases.customercenter.CustomerCenterManagementOption.Cancel INSTANCE;
  }

  @dev.drewhamilton.poko.Poko public static final class CustomerCenterManagementOption.CustomAction implements com.revenuecat.purchases.customercenter.CustomerCenterManagementOption {
    ctor public CustomerCenterManagementOption.CustomAction(String actionIdentifier, String? purchaseIdentifier);
    method public String getActionIdentifier();
    method public String? getPurchaseIdentifier();
    property public final String actionIdentifier;
    property public final String? purchaseIdentifier;
  }

  @dev.drewhamilton.poko.Poko public static final class CustomerCenterManagementOption.CustomUrl implements com.revenuecat.purchases.customercenter.CustomerCenterManagementOption {
    ctor public CustomerCenterManagementOption.CustomUrl(android.net.Uri uri);
    method public android.net.Uri getUri();
    property public final android.net.Uri uri;
  }

  public static final class CustomerCenterManagementOption.MissingPurchase implements com.revenuecat.purchases.customercenter.CustomerCenterManagementOption {
    field public static final com.revenuecat.purchases.customercenter.CustomerCenterManagementOption.MissingPurchase INSTANCE;
  }

}

package com.revenuecat.purchases.interfaces {

  @java.lang.FunctionalInterface public interface Callback<T> {
    method public void onReceived(T!);
  }

  public interface GetAmazonLWAConsentStatusCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onSuccess(com.revenuecat.purchases.AmazonLWAConsentStatus consentStatus);
  }

  public interface GetStoreProductsCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method @kotlin.jvm.JvmSuppressWildcards public void onReceived(java.util.List<com.revenuecat.purchases.models.StoreProduct> storeProducts);
  }

  public interface GetStorefrontCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onReceived(String storefrontCountryCode);
  }

  @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI public interface GetStorefrontLocaleCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onReceived(java.util.Locale storefrontLocale);
  }

  public interface GetVirtualCurrenciesCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onReceived(com.revenuecat.purchases.virtualcurrencies.VirtualCurrencies virtualCurrencies);
  }

  public interface LogInCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onReceived(com.revenuecat.purchases.CustomerInfo customerInfo, boolean created);
  }

  @Deprecated public interface ProductChangeCallback extends com.revenuecat.purchases.interfaces.PurchaseErrorCallback {
    method @Deprecated public void onCompleted(com.revenuecat.purchases.models.StoreTransaction? storeTransaction, com.revenuecat.purchases.CustomerInfo customerInfo);
  }

  public interface PurchaseCallback extends com.revenuecat.purchases.interfaces.PurchaseErrorCallback {
    method public void onCompleted(com.revenuecat.purchases.models.StoreTransaction storeTransaction, com.revenuecat.purchases.CustomerInfo customerInfo);
  }

  public interface PurchaseErrorCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error, boolean userCancelled);
  }

  public interface ReceiveCustomerInfoCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onReceived(com.revenuecat.purchases.CustomerInfo customerInfo);
  }

  public interface ReceiveOfferingsCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onReceived(com.revenuecat.purchases.Offerings offerings);
  }

  public fun interface RedeemWebPurchaseListener {
    method public void handleResult(com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result result);
  }

  public abstract static sealed class RedeemWebPurchaseListener.Result {
    method public final boolean isSuccess();
    property public final boolean isSuccess;
  }

  @dev.drewhamilton.poko.Poko public static final class RedeemWebPurchaseListener.Result.Error extends com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result {
    ctor public RedeemWebPurchaseListener.Result.Error(com.revenuecat.purchases.PurchasesError error);
    method public com.revenuecat.purchases.PurchasesError getError();
    property public final com.revenuecat.purchases.PurchasesError error;
  }

  @dev.drewhamilton.poko.Poko public static final class RedeemWebPurchaseListener.Result.Expired extends com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result {
    ctor public RedeemWebPurchaseListener.Result.Expired(String obfuscatedEmail);
    method public String getObfuscatedEmail();
    property public final String obfuscatedEmail;
  }

  public static final class RedeemWebPurchaseListener.Result.InvalidToken extends com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result {
    field public static final com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result.InvalidToken INSTANCE;
  }

  public static final class RedeemWebPurchaseListener.Result.PurchaseBelongsToOtherUser extends com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result {
    field public static final com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result.PurchaseBelongsToOtherUser INSTANCE;
  }

  @dev.drewhamilton.poko.Poko public static final class RedeemWebPurchaseListener.Result.Success extends com.revenuecat.purchases.interfaces.RedeemWebPurchaseListener.Result {
    ctor public RedeemWebPurchaseListener.Result.Success(com.revenuecat.purchases.CustomerInfo customerInfo);
    method public com.revenuecat.purchases.CustomerInfo getCustomerInfo();
    property public final com.revenuecat.purchases.CustomerInfo customerInfo;
  }

  public interface StorefrontProvider {
    method public String? getStorefront();
  }

  public interface SyncAttributesAndOfferingsCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onSuccess(com.revenuecat.purchases.Offerings offerings);
  }

  public interface SyncPurchasesCallback {
    method public void onError(com.revenuecat.purchases.PurchasesError error);
    method public void onSuccess(com.revenuecat.purchases.CustomerInfo customerInfo);
  }

  public interface UpdatedCustomerInfoListener {
    method public void onReceived(com.revenuecat.purchases.CustomerInfo);
  }

}

package com.revenuecat.purchases.models {

  public enum BillingFeature {
    method public String getPlayBillingClientName();
    property public final String playBillingClientName;
    enum_constant public static final com.revenuecat.purchases.models.BillingFeature PRICE_CHANGE_CONFIRMATION;
    enum_constant public static final com.revenuecat.purchases.models.BillingFeature SUBSCRIPTIONS;
    enum_constant public static final com.revenuecat.purchases.models.BillingFeature SUBSCRIPTIONS_UPDATE;
  }

  @dev.drewhamilton.poko.Poko public final class GoogleInstallmentsInfo implements com.revenuecat.purchases.models.InstallmentsInfo {
    ctor public GoogleInstallmentsInfo(int commitmentPaymentsCount, int renewalCommitmentPaymentsCount);
    method public int getCommitmentPaymentsCount();
    method public int getRenewalCommitmentPaymentsCount();
    property public int commitmentPaymentsCount;
    property public int renewalCommitmentPaymentsCount;
  }

  public abstract sealed class GooglePurchasingData implements com.revenuecat.purchases.models.PurchasingData {
    method public com.revenuecat.purchases.ProductType getProductType();
    property public com.revenuecat.purchases.ProductType productType;
  }

  @dev.drewhamilton.poko.Poko public static final class GooglePurchasingData.InAppProduct extends com.revenuecat.purchases.models.GooglePurchasingData {
    ctor public GooglePurchasingData.InAppProduct(String productId, com.android.billingclient.api.ProductDetails productDetails);
    method public com.android.billingclient.api.ProductDetails getProductDetails();
    method public String getProductId();
    property public final com.android.billingclient.api.ProductDetails productDetails;
    property public String productId;
  }

  @dev.drewhamilton.poko.Poko public static final class GooglePurchasingData.Subscription extends com.revenuecat.purchases.models.GooglePurchasingData {
    ctor public GooglePurchasingData.Subscription(String productId, String optionId, com.android.billingclient.api.ProductDetails productDetails, String token);
    ctor @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI public GooglePurchasingData.Subscription(String productId, String optionId, com.android.billingclient.api.ProductDetails productDetails, String token, optional com.revenuecat.purchases.models.Period? billingPeriod, optional java.util.List<? extends com.revenuecat.purchases.models.GooglePurchasingData>? addOnProducts);
    method public String getOptionId();
    method public com.android.billingclient.api.ProductDetails getProductDetails();
    method public String getProductId();
    method public String getToken();
    property public final String optionId;
    property public final com.android.billingclient.api.ProductDetails productDetails;
    property public String productId;
    property public final String token;
  }

  public enum GoogleReplacementMode implements com.revenuecat.purchases.ReplacementMode {
    method public int describeContents();
    method public int getPlayBillingClientMode();
    method public void writeToParcel(android.os.Parcel out, int flags);
    property public final int playBillingClientMode;
    enum_constant public static final com.revenuecat.purchases.models.GoogleReplacementMode CHARGE_FULL_PRICE;
    enum_constant public static final com.revenuecat.purchases.models.GoogleReplacementMode CHARGE_PRORATED_PRICE;
    enum_constant public static final com.revenuecat.purchases.models.GoogleReplacementMode DEFERRED;
    enum_constant public static final com.revenuecat.purchases.models.GoogleReplacementMode WITHOUT_PRORATION;
    enum_constant public static final com.revenuecat.purchases.models.GoogleReplacementMode WITH_TIME_PRORATION;
    field public static final com.revenuecat.purchases.models.GoogleReplacementMode.CREATOR CREATOR;
  }

  public static final class GoogleReplacementMode.CREATOR implements android.os.Parcelable.Creator<com.revenuecat.purchases.models.GoogleReplacementMode?> {
    method public com.revenuecat.purchases.models.GoogleReplacementMode? createFromParcel(android.os.Parcel in);
    method public com.revenuecat.purchases.models.GoogleReplacementMode? fromPlayBillingClientMode(@com.android.billingclient.api.BillingFlowParams.SubscriptionUpdateParams.ReplacementMode Integer? playBillingClientMode);
    method public com.revenuecat.purchases.models.GoogleReplacementMode?[] newArray(int size);
  }

  @dev.drewhamilton.poko.Poko public final class GoogleStoreProduct implements com.revenuecat.purchases.models.StoreProduct {
    ctor @Deprecated public GoogleStoreProduct(String productId, String? basePlanId, com.revenuecat.purchases.ProductType type, com.revenuecat.purchases.models.Price price, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, com.android.billingclient.api.ProductDetails productDetails, optional String? presentedOfferingIdentifier);
    ctor @Deprecated public GoogleStoreProduct(String productId, String? basePlanId, com.revenuecat.purchases.ProductType type, com.revenuecat.purchases.models.Price price, String name, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, com.android.billingclient.api.ProductDetails productDetails);
    ctor @Deprecated public GoogleStoreProduct(String productId, String? basePlanId, com.revenuecat.purchases.ProductType type, com.revenuecat.purchases.models.Price price, String name, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, com.android.billingclient.api.ProductDetails productDetails, optional @Deprecated String? presentedOfferingIdentifier);
    ctor @Deprecated public GoogleStoreProduct(String productId, String? basePlanId, com.revenuecat.purchases.ProductType type, com.revenuecat.purchases.models.Price price, String name, String title, String description, com.revenuecat.purchases.models.Period? period, com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions, com.revenuecat.purchases.models.SubscriptionOption? defaultOption, com.android.billingclient.api.ProductDetails productDetails, optional @Deprecated String? presentedOfferingIdentifier, optional com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    method @Deprecated public com.revenuecat.purchases.models.StoreProduct copyWithOfferingId(String offeringId);
    method public com.revenuecat.purchases.models.StoreProduct copyWithPresentedOfferingContext(com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    method public String? getBasePlanId();
    method public com.revenuecat.purchases.models.SubscriptionOption? getDefaultOption();
    method public String getDescription();
    method public String getId();
    method public String getName();
    method public com.revenuecat.purchases.models.Period? getPeriod();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public com.revenuecat.purchases.models.Price getPrice();
    method public com.android.billingclient.api.ProductDetails getProductDetails();
    method public String getProductId();
    method public com.revenuecat.purchases.models.PurchasingData getPurchasingData();
    method @Deprecated public String getSku();
    method public com.revenuecat.purchases.models.SubscriptionOptions? getSubscriptionOptions();
    method public String getTitle();
    method public com.revenuecat.purchases.ProductType getType();
    property public final String? basePlanId;
    property public com.revenuecat.purchases.models.SubscriptionOption? defaultOption;
    property public String description;
    property public String id;
    property public String name;
    property public com.revenuecat.purchases.models.Period? period;
    property public com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public String? presentedOfferingIdentifier;
    property public com.revenuecat.purchases.models.Price price;
    property public final com.android.billingclient.api.ProductDetails productDetails;
    property public final String productId;
    property public com.revenuecat.purchases.models.PurchasingData purchasingData;
    property @Deprecated public String sku;
    property public com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions;
    property public String title;
    property public com.revenuecat.purchases.ProductType type;
  }

  public final class GoogleStoreProductKt {
    method public static com.revenuecat.purchases.models.GoogleStoreProduct? getGoogleProduct(com.revenuecat.purchases.models.StoreProduct);
  }

  @dev.drewhamilton.poko.Poko public final class GoogleSubscriptionOption implements com.revenuecat.purchases.models.SubscriptionOption {
    ctor public GoogleSubscriptionOption(String productId, String basePlanId, String? offerId, java.util.List<com.revenuecat.purchases.models.PricingPhase> pricingPhases, java.util.List<java.lang.String> tags, com.android.billingclient.api.ProductDetails productDetails, String offerToken);
    ctor public GoogleSubscriptionOption(String productId, String basePlanId, String? offerId, java.util.List<com.revenuecat.purchases.models.PricingPhase> pricingPhases, java.util.List<java.lang.String> tags, com.android.billingclient.api.ProductDetails productDetails, String offerToken, optional com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    ctor public GoogleSubscriptionOption(String productId, String basePlanId, String? offerId, java.util.List<com.revenuecat.purchases.models.PricingPhase> pricingPhases, java.util.List<java.lang.String> tags, com.android.billingclient.api.ProductDetails productDetails, String offerToken, optional com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext, optional com.revenuecat.purchases.models.GoogleInstallmentsInfo? installmentsInfo);
    ctor @Deprecated public GoogleSubscriptionOption(String productId, String basePlanId, String? offerId, java.util.List<com.revenuecat.purchases.models.PricingPhase> pricingPhases, java.util.List<java.lang.String> tags, com.android.billingclient.api.ProductDetails productDetails, String offerToken, String presentedOfferingId);
    method public String getBasePlanId();
    method public String getId();
    method public com.revenuecat.purchases.models.GoogleInstallmentsInfo? getInstallmentsInfo();
    method public String? getOfferId();
    method public String getOfferToken();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public java.util.List<com.revenuecat.purchases.models.PricingPhase> getPricingPhases();
    method public com.android.billingclient.api.ProductDetails getProductDetails();
    method public String getProductId();
    method public com.revenuecat.purchases.models.PurchasingData getPurchasingData();
    method public java.util.List<java.lang.String> getTags();
    property public final String basePlanId;
    property public String id;
    property public com.revenuecat.purchases.models.GoogleInstallmentsInfo? installmentsInfo;
    property public final String? offerId;
    property public final String offerToken;
    property public com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public String? presentedOfferingIdentifier;
    property public java.util.List<com.revenuecat.purchases.models.PricingPhase> pricingPhases;
    property public final com.android.billingclient.api.ProductDetails productDetails;
    property public final String productId;
    property public com.revenuecat.purchases.models.PurchasingData purchasingData;
    property public java.util.List<java.lang.String> tags;
  }

  public enum InAppMessageType {
    enum_constant public static final com.revenuecat.purchases.models.InAppMessageType BILLING_ISSUES;
  }

  public interface InstallmentsInfo {
    method public int getCommitmentPaymentsCount();
    method public int getRenewalCommitmentPaymentsCount();
    property public abstract int commitmentPaymentsCount;
    property public abstract int renewalCommitmentPaymentsCount;
  }

  public enum OfferPaymentMode {
    enum_constant public static final com.revenuecat.purchases.models.OfferPaymentMode DISCOUNTED_RECURRING_PAYMENT;
    enum_constant public static final com.revenuecat.purchases.models.OfferPaymentMode FREE_TRIAL;
    enum_constant public static final com.revenuecat.purchases.models.OfferPaymentMode SINGLE_PAYMENT;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public final class Period implements android.os.Parcelable {
    ctor public Period(int value, com.revenuecat.purchases.models.Period.Unit unit, String iso8601);
    method public String getIso8601();
    method public com.revenuecat.purchases.models.Period.Unit getUnit();
    method public int getValue();
    method public double getValueInDays();
    method public double getValueInMonths();
    method public double getValueInWeeks();
    method public double getValueInYears();
    property public final String iso8601;
    property public final com.revenuecat.purchases.models.Period.Unit unit;
    property public final int value;
    property public final double valueInMonths;
    field public static final com.revenuecat.purchases.models.Period.Factory Factory;
  }

  public static final class Period.Factory {
    method public com.revenuecat.purchases.models.Period create(String iso8601);
  }

  public enum Period.Unit {
    enum_constant public static final com.revenuecat.purchases.models.Period.Unit DAY;
    enum_constant public static final com.revenuecat.purchases.models.Period.Unit MONTH;
    enum_constant public static final com.revenuecat.purchases.models.Period.Unit UNKNOWN;
    enum_constant public static final com.revenuecat.purchases.models.Period.Unit WEEK;
    enum_constant public static final com.revenuecat.purchases.models.Period.Unit YEAR;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public final class Price implements android.os.Parcelable {
    ctor public Price(String formatted, long amountMicros, String currencyCode);
    method public long getAmountMicros();
    method public String getCurrencyCode();
    method public String getFormatted();
    property public final long amountMicros;
    property public final String currencyCode;
    property public final String formatted;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public final class PricingPhase implements android.os.Parcelable {
    ctor public PricingPhase(com.revenuecat.purchases.models.Period billingPeriod, com.revenuecat.purchases.models.RecurrenceMode recurrenceMode, Integer? billingCycleCount, com.revenuecat.purchases.models.Price price);
    method @Deprecated public String formattedPriceInMonths();
    method @Deprecated public String formattedPriceInMonths(optional java.util.Locale locale);
    method public Integer? getBillingCycleCount();
    method public com.revenuecat.purchases.models.Period getBillingPeriod();
    method public com.revenuecat.purchases.models.OfferPaymentMode? getOfferPaymentMode();
    method public com.revenuecat.purchases.models.Price getPrice();
    method public com.revenuecat.purchases.models.RecurrenceMode getRecurrenceMode();
    method public com.revenuecat.purchases.models.Price pricePerDay();
    method public com.revenuecat.purchases.models.Price pricePerDay(optional java.util.Locale locale);
    method public com.revenuecat.purchases.models.Price pricePerMonth();
    method public com.revenuecat.purchases.models.Price pricePerMonth(optional java.util.Locale locale);
    method public com.revenuecat.purchases.models.Price pricePerWeek();
    method public com.revenuecat.purchases.models.Price pricePerWeek(optional java.util.Locale locale);
    method public com.revenuecat.purchases.models.Price pricePerYear();
    method public com.revenuecat.purchases.models.Price pricePerYear(optional java.util.Locale locale);
    property public final Integer? billingCycleCount;
    property public final com.revenuecat.purchases.models.Period billingPeriod;
    property public final com.revenuecat.purchases.models.OfferPaymentMode? offerPaymentMode;
    property public final com.revenuecat.purchases.models.Price price;
    property public final com.revenuecat.purchases.models.RecurrenceMode recurrenceMode;
  }

  public enum PurchaseState {
    enum_constant public static final com.revenuecat.purchases.models.PurchaseState PENDING;
    enum_constant public static final com.revenuecat.purchases.models.PurchaseState PURCHASED;
    enum_constant public static final com.revenuecat.purchases.models.PurchaseState UNSPECIFIED_STATE;
  }

  public enum PurchaseType {
    enum_constant public static final com.revenuecat.purchases.models.PurchaseType AMAZON_PURCHASE;
    enum_constant public static final com.revenuecat.purchases.models.PurchaseType GOOGLE_PURCHASE;
    enum_constant public static final com.revenuecat.purchases.models.PurchaseType GOOGLE_RESTORED_PURCHASE;
  }

  public interface PurchasingData {
    method public String getProductId();
    method public com.revenuecat.purchases.ProductType getProductType();
    property public abstract String productId;
    property public abstract com.revenuecat.purchases.ProductType productType;
  }

  public interface RawDataContainer<DataType> {
    method public DataType getRawData();
    property public abstract DataType rawData;
  }

  public enum RecurrenceMode {
    method public Integer? getIdentifier();
    property public final Integer? identifier;
    enum_constant public static final com.revenuecat.purchases.models.RecurrenceMode FINITE_RECURRING;
    enum_constant public static final com.revenuecat.purchases.models.RecurrenceMode INFINITE_RECURRING;
    enum_constant public static final com.revenuecat.purchases.models.RecurrenceMode NON_RECURRING;
    enum_constant public static final com.revenuecat.purchases.models.RecurrenceMode UNKNOWN;
  }

  public final class RecurrenceModeKt {
    method public static com.revenuecat.purchases.models.RecurrenceMode toRecurrenceMode(Integer?);
  }

  public interface StoreProduct {
    method @Deprecated public com.revenuecat.purchases.models.StoreProduct copyWithOfferingId(String offeringId);
    method public com.revenuecat.purchases.models.StoreProduct copyWithPresentedOfferingContext(com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    method public default String? formattedPricePerMonth(optional java.util.Locale locale);
    method public com.revenuecat.purchases.models.SubscriptionOption? getDefaultOption();
    method public String getDescription();
    method public String getId();
    method public String getName();
    method public com.revenuecat.purchases.models.Period? getPeriod();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public com.revenuecat.purchases.models.Price getPrice();
    method public com.revenuecat.purchases.models.PurchasingData getPurchasingData();
    method @Deprecated public String getSku();
    method public com.revenuecat.purchases.models.SubscriptionOptions? getSubscriptionOptions();
    method public String getTitle();
    method public com.revenuecat.purchases.ProductType getType();
    method public default com.revenuecat.purchases.models.Price? pricePerDay(optional java.util.Locale locale);
    method public default com.revenuecat.purchases.models.Price? pricePerMonth(optional java.util.Locale locale);
    method public default com.revenuecat.purchases.models.Price? pricePerWeek(optional java.util.Locale locale);
    method public default com.revenuecat.purchases.models.Price? pricePerYear(optional java.util.Locale locale);
    property public abstract com.revenuecat.purchases.models.SubscriptionOption? defaultOption;
    property public abstract String description;
    property public abstract String id;
    property public abstract String name;
    property public abstract com.revenuecat.purchases.models.Period? period;
    property public abstract com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public abstract String? presentedOfferingIdentifier;
    property public abstract com.revenuecat.purchases.models.Price price;
    property public abstract com.revenuecat.purchases.models.PurchasingData purchasingData;
    property @Deprecated public abstract String sku;
    property public abstract com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions;
    property public abstract String title;
    property public abstract com.revenuecat.purchases.ProductType type;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize @kotlinx.parcelize.TypeParceler public final class StoreTransaction implements android.os.Parcelable {
    ctor public StoreTransaction(String? orderId, java.util.List<java.lang.String> productIds, com.revenuecat.purchases.ProductType type, long purchaseTime, String purchaseToken, com.revenuecat.purchases.models.PurchaseState purchaseState, Boolean? isAutoRenewing, String? signature, org.json.JSONObject originalJson, com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext, String? storeUserID, com.revenuecat.purchases.models.PurchaseType purchaseType, String? marketplace, String? subscriptionOptionId, com.revenuecat.purchases.ReplacementMode? replacementMode);
    ctor public StoreTransaction(String? orderId, java.util.List<java.lang.String> productIds, com.revenuecat.purchases.ProductType type, long purchaseTime, String purchaseToken, com.revenuecat.purchases.models.PurchaseState purchaseState, Boolean? isAutoRenewing, String? signature, org.json.JSONObject originalJson, com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext, String? storeUserID, com.revenuecat.purchases.models.PurchaseType purchaseType, String? marketplace, String? subscriptionOptionId, @com.revenuecat.purchases.ExperimentalPreviewRevenueCatPurchasesAPI java.util.Map<java.lang.String,java.lang.String>? subscriptionOptionIdForProductIDs, com.revenuecat.purchases.ReplacementMode? replacementMode);
    ctor @Deprecated public StoreTransaction(String? orderId, java.util.List<java.lang.String> productIds, com.revenuecat.purchases.ProductType type, long purchaseTime, String purchaseToken, com.revenuecat.purchases.models.PurchaseState purchaseState, Boolean? isAutoRenewing, String? signature, org.json.JSONObject originalJson, String? presentedOfferingIdentifier, String? storeUserID, com.revenuecat.purchases.models.PurchaseType purchaseType, String? marketplace, String? subscriptionOptionId, com.revenuecat.purchases.ReplacementMode? replacementMode);
    method public String? getMarketplace();
    method public String? getOrderId();
    method public org.json.JSONObject getOriginalJson();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public java.util.List<java.lang.String> getProductIds();
    method public com.revenuecat.purchases.models.PurchaseState getPurchaseState();
    method public long getPurchaseTime();
    method public String getPurchaseToken();
    method public com.revenuecat.purchases.models.PurchaseType getPurchaseType();
    method public com.revenuecat.purchases.ReplacementMode? getReplacementMode();
    method public String? getSignature();
    method @Deprecated public java.util.List<java.lang.String> getSkus();
    method public String? getStoreUserID();
    method public String? getSubscriptionOptionId();
    method public com.revenuecat.purchases.ProductType getType();
    method public Boolean? isAutoRenewing();
    property public final Boolean? isAutoRenewing;
    property public final String? marketplace;
    property public final String? orderId;
    property public final org.json.JSONObject originalJson;
    property public final com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public final String? presentedOfferingIdentifier;
    property public final java.util.List<java.lang.String> productIds;
    property public final com.revenuecat.purchases.models.PurchaseState purchaseState;
    property public final long purchaseTime;
    property public final String purchaseToken;
    property public final com.revenuecat.purchases.models.PurchaseType purchaseType;
    property public final com.revenuecat.purchases.ReplacementMode? replacementMode;
    property public final String? signature;
    property @Deprecated @kotlinx.parcelize.IgnoredOnParcel public final java.util.List<java.lang.String> skus;
    property public final String? storeUserID;
    property public final String? subscriptionOptionId;
    property public final com.revenuecat.purchases.ProductType type;
  }

  public interface SubscriptionOption {
    method public default com.revenuecat.purchases.models.Period? getBillingPeriod();
    method public default com.revenuecat.purchases.models.PricingPhase? getFreePhase();
    method public default com.revenuecat.purchases.models.PricingPhase? getFullPricePhase();
    method public String getId();
    method public com.revenuecat.purchases.models.InstallmentsInfo? getInstallmentsInfo();
    method public default com.revenuecat.purchases.models.PricingPhase? getIntroPhase();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public java.util.List<com.revenuecat.purchases.models.PricingPhase> getPricingPhases();
    method public com.revenuecat.purchases.models.PurchasingData getPurchasingData();
    method public java.util.List<java.lang.String> getTags();
    method public default boolean isBasePlan();
    method public default boolean isPrepaid();
    property public default com.revenuecat.purchases.models.Period? billingPeriod;
    property public default com.revenuecat.purchases.models.PricingPhase? freePhase;
    property public default com.revenuecat.purchases.models.PricingPhase? fullPricePhase;
    property public abstract String id;
    property public abstract com.revenuecat.purchases.models.InstallmentsInfo? installmentsInfo;
    property public default com.revenuecat.purchases.models.PricingPhase? introPhase;
    property public default boolean isBasePlan;
    property public default boolean isPrepaid;
    property public abstract com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public abstract String? presentedOfferingIdentifier;
    property public abstract java.util.List<com.revenuecat.purchases.models.PricingPhase> pricingPhases;
    property public abstract com.revenuecat.purchases.models.PurchasingData purchasingData;
    property public abstract java.util.List<java.lang.String> tags;
  }

  public final class SubscriptionOptions implements kotlin.jvm.internal.markers.KMappedMarker java.util.List<com.revenuecat.purchases.models.SubscriptionOption> {
    ctor public SubscriptionOptions(java.util.List<? extends com.revenuecat.purchases.models.SubscriptionOption> subscriptionOptions);
    method public com.revenuecat.purchases.models.SubscriptionOption? getBasePlan();
    method public com.revenuecat.purchases.models.SubscriptionOption? getDefaultOffer();
    method public com.revenuecat.purchases.models.SubscriptionOption? getFreeTrial();
    method public com.revenuecat.purchases.models.SubscriptionOption? getIntroOffer();
    method public java.util.List<com.revenuecat.purchases.models.SubscriptionOption> withTag(String tag);
    property public final com.revenuecat.purchases.models.SubscriptionOption? basePlan;
    property public final com.revenuecat.purchases.models.SubscriptionOption? defaultOffer;
    property public final com.revenuecat.purchases.models.SubscriptionOption? freeTrial;
    property public final com.revenuecat.purchases.models.SubscriptionOption? introOffer;
    field public static final String RC_IGNORE_OFFER_TAG = "rc-ignore-offer";
  }

  @dev.drewhamilton.poko.Poko public final class TestStoreProduct implements com.revenuecat.purchases.models.StoreProduct {
    ctor @Deprecated public TestStoreProduct(String id, String title, String description, com.revenuecat.purchases.models.Price price, com.revenuecat.purchases.models.Period? period, optional com.revenuecat.purchases.models.Period? freeTrialPeriod, optional com.revenuecat.purchases.models.Price? introPrice);
    ctor public TestStoreProduct(String id, String name, String title, String description, com.revenuecat.purchases.models.Price price);
    ctor public TestStoreProduct(String id, String name, String title, String description, com.revenuecat.purchases.models.Price price, optional com.revenuecat.purchases.models.Period? period);
    ctor @Deprecated public TestStoreProduct(String id, String name, String title, String description, com.revenuecat.purchases.models.Price price, optional com.revenuecat.purchases.models.Period? period, optional com.revenuecat.purchases.models.Period? freeTrialPeriod, optional com.revenuecat.purchases.models.Price? introPrice);
    ctor public TestStoreProduct(String id, String name, String title, String description, com.revenuecat.purchases.models.Price price, optional com.revenuecat.purchases.models.Period? period, optional com.revenuecat.purchases.models.PricingPhase? freeTrialPricingPhase);
    ctor public TestStoreProduct(String id, String name, String title, String description, com.revenuecat.purchases.models.Price price, optional com.revenuecat.purchases.models.Period? period, optional com.revenuecat.purchases.models.PricingPhase? freeTrialPricingPhase, optional com.revenuecat.purchases.models.PricingPhase? introPricePricingPhase);
    ctor public TestStoreProduct(String id, String name, String title, String description, com.revenuecat.purchases.models.Price price, optional com.revenuecat.purchases.models.Period? period, optional com.revenuecat.purchases.models.PricingPhase? freeTrialPricingPhase, optional com.revenuecat.purchases.models.PricingPhase? introPricePricingPhase, optional com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    method @Deprecated public com.revenuecat.purchases.models.StoreProduct copyWithOfferingId(String offeringId);
    method public com.revenuecat.purchases.models.StoreProduct copyWithPresentedOfferingContext(com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext);
    method public com.revenuecat.purchases.models.SubscriptionOption? getDefaultOption();
    method public String getDescription();
    method public String getId();
    method public String getName();
    method public com.revenuecat.purchases.models.Period? getPeriod();
    method public com.revenuecat.purchases.PresentedOfferingContext? getPresentedOfferingContext();
    method @Deprecated public String? getPresentedOfferingIdentifier();
    method public com.revenuecat.purchases.models.Price getPrice();
    method public com.revenuecat.purchases.models.PurchasingData getPurchasingData();
    method public String getSku();
    method public com.revenuecat.purchases.models.SubscriptionOptions? getSubscriptionOptions();
    method public String getTitle();
    method public com.revenuecat.purchases.ProductType getType();
    property public com.revenuecat.purchases.models.SubscriptionOption? defaultOption;
    property public String description;
    property public String id;
    property public String name;
    property public com.revenuecat.purchases.models.Period? period;
    property public com.revenuecat.purchases.PresentedOfferingContext? presentedOfferingContext;
    property @Deprecated public String? presentedOfferingIdentifier;
    property public com.revenuecat.purchases.models.Price price;
    property public com.revenuecat.purchases.models.PurchasingData purchasingData;
    property public String sku;
    property public com.revenuecat.purchases.models.SubscriptionOptions? subscriptionOptions;
    property public String title;
    property public com.revenuecat.purchases.ProductType type;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize public final class Transaction implements android.os.Parcelable {
    ctor @Deprecated public Transaction(String transactionIdentifier, String revenuecatId, String productIdentifier, String productId, java.util.Date purchaseDate, String? storeTransactionId, com.revenuecat.purchases.Store store);
    ctor public Transaction(String transactionIdentifier, @Deprecated String revenuecatId, String productIdentifier, @Deprecated String productId, java.util.Date purchaseDate, String? storeTransactionId, com.revenuecat.purchases.Store store, String? displayName, optional boolean isSandbox, java.util.Date? originalPurchaseDate, com.revenuecat.purchases.models.Price? price);
    method public String? getDisplayName();
    method public java.util.Date? getOriginalPurchaseDate();
    method public com.revenuecat.purchases.models.Price? getPrice();
    method @Deprecated public String getProductId();
    method public String getProductIdentifier();
    method public java.util.Date getPurchaseDate();
    method @Deprecated public String getRevenuecatId();
    method public com.revenuecat.purchases.Store getStore();
    method public String? getStoreTransactionId();
    method public String getTransactionIdentifier();
    method public boolean isSandbox();
    property public final String? displayName;
    property public final boolean isSandbox;
    property public final java.util.Date? originalPurchaseDate;
    property public final com.revenuecat.purchases.models.Price? price;
    property @Deprecated public final String productId;
    property public final String productIdentifier;
    property public final java.util.Date purchaseDate;
    property @Deprecated public final String revenuecatId;
    property public final com.revenuecat.purchases.Store store;
    property public final String? storeTransactionId;
    property public final String transactionIdentifier;
  }

}

package com.revenuecat.purchases.utils {

  public final class Iso8601Utils {
    ctor public Iso8601Utils();
    method public static String! format(java.util.Date!);
    method public static java.util.Date! parse(String!);
  }

  public final class LocaleExtensionsKt {
    method public static java.util.List<java.util.Locale> getDefaultLocales();
  }

}

package com.revenuecat.purchases.virtualcurrencies {

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize @kotlinx.serialization.Serializable public final class VirtualCurrencies implements android.os.Parcelable {
    method public operator com.revenuecat.purchases.virtualcurrencies.VirtualCurrency? get(String code);
    method public java.util.Map<java.lang.String,com.revenuecat.purchases.virtualcurrencies.VirtualCurrency> getAll();
    property public final java.util.Map<java.lang.String,com.revenuecat.purchases.virtualcurrencies.VirtualCurrency> all;
  }

  @dev.drewhamilton.poko.Poko @kotlinx.parcelize.Parcelize @kotlinx.serialization.Serializable public final class VirtualCurrency implements android.os.Parcelable {
    method public int getBalance();
    method public String getCode();
    method public String getName();
    method public String? getServerDescription();
    property public final int balance;
    property public final String code;
    property public final String name;
    property public final String? serverDescription;
  }

}

